apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'io.fabric'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {

    signingConfigs {
        release {
            keyAlias keystoreProperties['releaseKeyAlias']
            keyPassword keystoreProperties['releaseKeyPassword']
            storeFile file(rootDir.getCanonicalPath() + '/' + keystoreProperties['releaseKeyStore'])
            storePassword keystoreProperties['releaseStorePassword']
        }
    }

    compileSdkVersion rootProject.compileSdkVersion
    defaultConfig {
        applicationId "dev.tran.nam.sort.algorithm"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0.0"

        vectorDrawables.useSupportLibrary true

        multiDexEnabled true
    }

    dataBinding {
        enabled = true
    }

    buildTypes {
        debug {
            debuggable true
        }
        release {
            debuggable false
            minifyEnabled true
            shrinkResources false
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility rootProject.java_version
        targetCompatibility rootProject.java_version
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }

    androidExtensions {
        experimental = true
    }
}

kapt {
    generateStubs = true
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    kapt "com.google.dagger:dagger-compiler:$rootProject.dagger"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.dagger"
    kapt "androidx.lifecycle:lifecycle-compiler:$rootProject.lifecycle"
    kapt "com.github.bumptech.glide:compiler:$rootProject.glide"
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$rootProject.leakcanary"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$rootProject.leakcanary"

    kapt "com.android.tools.build.jetifier:jetifier-core:$rootProject.jetifier"
    annotationProcessor "com.android.tools.build.jetifier:jetifier-core:$rootProject.jetifier"

    implementation project(':core')

    androidTestImplementation "androidx.arch.core:core-testing:$rootProject.core_testing"
    androidTestImplementation "androidx.test:runner:$rootProject.runner"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espresso"
    androidTestImplementation "org.mockito:mockito-core:$rootProject.mockito_core"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    implementation 'com.alexvasilkov:gesture-views:2.5.2'

    implementation 'com.google.firebase:firebase-core:17.1.0'
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.9@aar') {
        transitive = true
    }
}
apply plugin: 'com.google.gms.google-services'


